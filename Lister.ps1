$srcFolder = "luaSrc"
$rootFolder = $PSScriptRoot # the folder that the powershell file is

$modInfo = Get-Content -Path "$rootFolder/mod_info.json" | ConvertFrom-Json
$outputFile = $modInfo.LuaList
$modID = $modInfo.id

$autoGeneratedFileOutputFolder = "$rootFolder"
$outputFile = $rootFolder + "/" + $outputFile

function Add-ShipSystem {
    param (
        $package,
        $luaSourceCodePath,
        $name,
        $modID
    )
    #region auto generate the java files
    $generatedPath = $package.Replace(".", "/")
    $filePath = "$autoGeneratedFileOutputFolder/$generatedPath/$name.java"

    # Get the directory portion of the path
    $directory = Split-Path $filePath

    # Recursively create the directory if it doesn't exist
    if (-not (Test-Path $directory)) {
        New-Item -Path $directory -ItemType Directory -Force | Out-Null
    }

    # Java source code
    $source = @"
package $package;

import DeCell.StarLua.ShipSystems.LuaShipSystemBase;
import org.json.JSONException;

import java.io.IOException;

public class $name extends LuaShipSystemBase {
    public $name() throws JSONException, IOException {
        super.setLuaPath("$luaSourceCodePath", "$modID");
    }
}
"@

    # create it if it doesnt exisst
    if (!(Test-Path $filePath)) {
        New-Item -Path $filePath -ItemType File
    }

    # clear the file
    Clear-Content -Path $filePath

    Set-Content -Path $filePath -Value $source -Encoding UTF8
    Write-Host "Generated Ship System at $filePath"


    #endregion
}

if (!(Test-Path $outputFile)) {
    # create it if it doesnt exisst
    New-Item -Path $outputFile -ItemType File
}

if (!(Test-Path $autoGeneratedFileOutputFolder)) {
    # create it if it doesnt exisst
    New-Item -Path $autoGeneratedFileOutputFolder -ItemType Directory
}

# clear the file
Clear-Content -Path $outputFile

# the directory we want to search lua files on
$searchFolder = $rootFolder + "/" + $srcFolder

# get them recursively
$luaFiles = Get-ChildItem -Path $searchFolder -Recurse -Filter "*.lua"

foreach ($file in $luaFiles) {
    #region push stuff to the lua src file for indexing

    # read the first line of the file
    # remove the "-- " comment characters as well .ToString().Substring(8)
    $type = (Get-Content -Path $file.FullName)[0]
    $package = (Get-Content -Path $file.FullName)[1]
    $name = (Get-Content -Path $file.FullName)[2]


    if ($type.Contains("-- ")) {
        $type = $type.ToString().Substring(8)
    } else { $type = " " }

    if ($package.Contains("-- ")) {
        $package = $package.ToString().Substring(11)
    } else { $package = " " }

    if ($name.Contains("-- ")) {
        $name = $name.ToString().Substring(8)
    } else { $name = " " }


    # make the path relative
    $relativePath = $file.FullName -replace [regex]::Escape($rootFolder + "\")

    $relativePath = $relativePath -replace [regex]::Escape("\"), [regex]::Escape("/")

    # push to the file
    Add-Content -Path $outputFile -Value "$relativePath,$type,$package,$name"
    Write-Output "Written $relativePath,$type,$path,$name to $outputFile"

    #endregion



    if ($type -eq "SHIP_SYSTEM") {
        Add-ShipSystem -package $package -luaSourceCodePath $relativePath -name $name -modID $modID
    }




}

Write-Host "All .lua files have been listed to '$outputFile'."
